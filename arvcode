package org.firstinspires.ftc.teamcode;
import com.acmerobotics.dashboard.FtcDashboard;
import com.acmerobotics.dashboard.config.Config;
import com.acmerobotics.dashboard.telemetry.MultipleTelemetry;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;

@Config
@TeleOp(name = "arvauto", group = "auto")
public class ArvindTelop extends LinearOpMode{
    private ElapsedTime runtime = new ElapsedTime();
    private DcMotor leftFrontDrive = null;
    private DcMotor leftBackDrive = null;
    private DcMotor rightFrontDrive = null;
    private DcMotor rightBackDrive = null;
    private DcMotor specimenslide = null;
    double targetpositon;
    double target2;







    double axial;
    double lateral;
    double yaw;
    double left_trigger;
    double right_trigger;



    public void runOpMode(){

        leftFrontDrive = hardwareMap.get(DcMotor.class, "backleft");
        leftBackDrive = hardwareMap.get(DcMotor.class, "frontleft");
        rightFrontDrive = hardwareMap.get(DcMotor.class, "frontright");
        rightBackDrive = hardwareMap.get(DcMotor.class,"backright");
        specimenslide = hardwareMap.get(DcMotor.class,"specimenslide");

        specimenslide.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
        specimenslide.setMode(DcMotor.RunMode.RUN_USING_ENCODER);

        FtcDashboard dashboard = FtcDashboard.getInstance();
        telemetry = new MultipleTelemetry(telemetry, dashboard.getTelemetry());

        waitForStart();
        runtime.reset();
        //left front and back wheels reversed

        while (opModeIsActive()){
            axial = gamepad1.left_stick_y;
            //sets the axial control on the controller
            lateral = gamepad1.left_stick_x;
            //sets the lateral control on the controller
            yaw = gamepad1.right_stick_x;
            //sets the yaw control on the controller









            telemetry.addData("axial", Double.toString(axial));
            telemetry.addData("lateral", Double.toString(lateral));
            telemetry.addData("Yaw", Double.toString(yaw));

//            leftFrontDrive.setPower(axial-lateral+yaw);
//            leftBackDrive.setPower(axial+lateral+yaw);
//            rightFrontDrive.setPower(-axial+lateral+yaw);
//            rightBackDrive.setPower(-axial-lateral+yaw);
            left_trigger = gamepad1.left_trigger;
            //sets the left trigger control on the controller
            right_trigger = gamepad1.right_trigger;
            //sets the right trigget control on the controller
         double divisor = 100;
         double controllersensitivity = 1.1;

            if (gamepad2.right_stick_y > 0.1) {
                targetpositon = targetpositon+(controllersensitivity*gamepad2.right_stick_y);
               // sleep(1000);
                specimenslide.setPower(targetpositon-specimenslide.getCurrentPosition()/divisor);

            }else if(gamepad2.right_stick_y < 0.1){
                targetpositon = targetpositon+(controllersensitivity*gamepad2.right_stick_y);
              //  sleep(1000);
                specimenslide.setPower(targetpositon-specimenslide.getCurrentPosition()/divisor);

            }else
                specimenslide.setPower(0);


//         targetpositon = targetpositon+(controllersensitivity*gamepad2.right_stick_y);
//         specimenslide.setPower(targetpositon-specimenslide.getCurrentPosition()/divisor);
//         specimenslide.setPower(0);








            telemetry.addData("position", specimenslide.getCurrentPosition());
            telemetry.update();


            telemetry.addData("power", Double.toString((target2-specimenslide.getCurrentPosition())/divisor));
            telemetry.addData("specimenslide", Double.toString(specimenslide.getCurrentPosition()));
           // telemetry.addData("error", Double.toString(error));


            telemetry.update();


        }

    }
}
